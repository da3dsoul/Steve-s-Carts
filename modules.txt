000, "Coal Engine", ModuleCoalStandard.class, 15)).addRecipe(new Object[][] {{Items.iron_ingot, Items.iron_ingot, Items.iron_ingot}, {Items.iron_ingot, Blocks.furnace, Items.iron_ingot}, {Blocks.piston, null, Blocks.piston}});
001, "Solar Engine", ModuleSolarStandard.class, 20)).addSides(new ModuleData.SIDE[] {ModuleData.SIDE.CENTER, ModuleData.SIDE.TOP}).removeModel("Top").addRecipe(new Object[][] {{Items.iron_ingot, ComponentTypes.SOLAR_PANEL.getItemStack(), Items.iron_ingot}, {ComponentTypes.SOLAR_PANEL.getItemStack(), ComponentTypes.ADVANCED_PCB.getItemStack(), ComponentTypes.SOLAR_PANEL.getItemStack()}, {Blocks.piston, ComponentTypes.SOLAR_PANEL.getItemStack(), Blocks.piston}});
002, "Side Chests", ModuleSideChests.class, 3)).addSides(new ModuleData.SIDE[] {ModuleData.SIDE.RIGHT, ModuleData.SIDE.LEFT}).addRecipe(new Object[][] {{ComponentTypes.HUGE_CHEST_PANE.getItemStack(), ComponentTypes.CHEST_PANE.getItemStack(), ComponentTypes.HUGE_CHEST_PANE.getItemStack()}, {ComponentTypes.LARGE_CHEST_PANE.getItemStack(), ComponentTypes.CHEST_LOCK.getItemStack(), ComponentTypes.LARGE_CHEST_PANE.getItemStack()}, {ComponentTypes.HUGE_CHEST_PANE.getItemStack(), ComponentTypes.CHEST_PANE.getItemStack(), ComponentTypes.HUGE_CHEST_PANE.getItemStack()}});
003, "Top Chest", ModuleTopChest.class, 6)).addSide(ModuleData.SIDE.TOP).addRecipe(new Object[][] {{ComponentTypes.HUGE_CHEST_PANE.getItemStack(), ComponentTypes.HUGE_CHEST_PANE.getItemStack(), ComponentTypes.HUGE_CHEST_PANE.getItemStack()}, {ComponentTypes.CHEST_PANE.getItemStack(), ComponentTypes.CHEST_LOCK.getItemStack(), ComponentTypes.CHEST_PANE.getItemStack()}, {ComponentTypes.HUGE_CHEST_PANE.getItemStack(), ComponentTypes.HUGE_CHEST_PANE.getItemStack(), ComponentTypes.HUGE_CHEST_PANE.getItemStack()}});
004, "Front Chest", ModuleFrontChest.class, 5)).addSide(ModuleData.SIDE.FRONT).addRecipe(new Object[][] {{ComponentTypes.CHEST_PANE.getItemStack(), ComponentTypes.LARGE_CHEST_PANE.getItemStack(), ComponentTypes.CHEST_PANE.getItemStack()}, {ComponentTypes.CHEST_PANE.getItemStack(), ComponentTypes.CHEST_LOCK.getItemStack(), ComponentTypes.CHEST_PANE.getItemStack()}, {ComponentTypes.LARGE_CHEST_PANE.getItemStack(), ComponentTypes.LARGE_CHEST_PANE.getItemStack(), ComponentTypes.LARGE_CHEST_PANE.getItemStack()}});
005, "Internal Storage", ModuleInternalStorage.class, 25)).setAllowDuplicate().addRecipe(new Object[][] {{ComponentTypes.CHEST_PANE.getItemStack(), ComponentTypes.CHEST_PANE.getItemStack(), ComponentTypes.CHEST_PANE.getItemStack()}, {ComponentTypes.CHEST_PANE.getItemStack(), ComponentTypes.CHEST_LOCK.getItemStack(), ComponentTypes.CHEST_PANE.getItemStack()}, {ComponentTypes.CHEST_PANE.getItemStack(), ComponentTypes.CHEST_PANE.getItemStack(), ComponentTypes.CHEST_PANE.getItemStack()}});
006, "Extracting Chests", ModuleExtractingChests.class, 75)).addSides(new ModuleData.SIDE[] {ModuleData.SIDE.CENTER, ModuleData.SIDE.RIGHT, ModuleData.SIDE.LEFT}).addRecipe(new Object[][] {{ComponentTypes.HUGE_IRON_PANE.getItemStack(), ComponentTypes.HUGE_IRON_PANE.getItemStack(), ComponentTypes.HUGE_IRON_PANE.getItemStack()}, {ComponentTypes.LARGE_IRON_PANE.getItemStack(), ComponentTypes.CHEST_LOCK.getItemStack(), ComponentTypes.LARGE_IRON_PANE.getItemStack()}, {ComponentTypes.HUGE_DYNAMIC_PANE.getItemStack(), ComponentTypes.LARGE_DYNAMIC_PANE.getItemStack(), ComponentTypes.HUGE_DYNAMIC_PANE.getItemStack()}});
007, "Torch Placer", ModuleTorch.class, 14)).addSides(new ModuleData.SIDE[] {ModuleData.SIDE.RIGHT, ModuleData.SIDE.LEFT}).addRecipe(new Object[][] {{ComponentTypes.TRI_TORCH.getItemStack(), null, ComponentTypes.TRI_TORCH.getItemStack()}, {Items.iron_ingot, null, Items.iron_ingot}, {Items.iron_ingot, Items.iron_ingot, Items.iron_ingot}});
008, "Basic Drill", ModuleDrillDiamond.class, 10, false)).addSide(ModuleData.SIDE.FRONT).addRecipe(new Object[][] {{Items.iron_ingot, Items.diamond, null}, {null, Items.iron_ingot, Items.diamond}, {Items.iron_ingot, Items.diamond, null}});
009, "Galgadorian Drill", ModuleDrillGalgadorian.class, 150, true)).addSide(ModuleData.SIDE.FRONT).addRecipe(new Object[][] {{ComponentTypes.GALGADORIAN_METAL.getItemStack(), ComponentTypes.ENHANCED_GALGADORIAN_METAL.getItemStack(), null}, {Blocks.diamond_block, hardeneddrill.getItemStack(), ComponentTypes.ENHANCED_GALGADORIAN_METAL.getItemStack()}, {ComponentTypes.GALGADORIAN_METAL.getItemStack(), ComponentTypes.ENHANCED_GALGADORIAN_METAL.getItemStack(), null}});
010, "Railer", ModuleRailer.class, 3)).addRecipe(new Object[][] {{Blocks.stone, Blocks.stone, Blocks.stone}, {Items.iron_ingot, Blocks.rail, Items.iron_ingot},
011, "Large Railer", ModuleRailerLarge.class, 17)).addRecipe(new Object[][] {{Items.iron_ingot, Items.iron_ingot, Items.iron_ingot}, {railer.getItemStack(), Blocks.rail, railer.getItemStack()}, {Items.iron_ingot, Items.iron_ingot, Items.iron_ingot}});
012, "Bridge Builder", ModuleBridge.class, 14)).addRecipe(new Object[][] {{null, Items.redstone, null}, {Blocks.brick_block, ComponentTypes.SIMPLE_PCB.getItemStack(), Blocks.brick_block}, {null, Blocks.piston, null}});
013, "Track Remover", ModuleRemover.class, 8)).addSides(new ModuleData.SID
014, "Basic Farmer", ModuleFarmerDiamond.class, 36, false)).addSide(ModuleData.SIDE.FRONT).addRecipe(new Object[][] {{Items.diamond, Items.diamond, Items.diamond}, {null, Items.iron_ingot, null}, {ComponentTypes.SIMPLE_PCB.getItemStack(), Items.gold_ingot, ComponentTypes.SIMPLE_PCB.getItemStack()}});
015, "Basic Wood Cutter", ModuleWoodcutterDiamond.class, 34, false)).addSide(ModuleData.SIDE.FRONT).addRecipe(new Object[][] {{ComponentTypes.SAW_BLADE.getItemStack(), ComponentTypes.SAW_BLADE.getItemStack(), ComponentTypes.SAW_BLADE.getItemStack()}, {ComponentTypes.SAW_BLADE.getItemStack(), Items.iron_ingot, ComponentTypes.SAW_BLADE.getItemStack()}, {null, ComponentTypes.WOOD_CUTTING_CORE.getItemStack(), null}});
016, "Hydrator", ModuleHydrater.class, 6)).addRequirement(tankGroup).addRecipe(new Object[][] {{Items.iron_ingot, Items.glass_bottle, Items.iron_ingot}, {null, Blocks.fence, null}});
017, "Large Bridge Builder", ModuleBridgeLarge.class, 15)).addRecipe(new Object[][] {{null, Items.redstone, null}, {Blocks.brick_block, ComponentTypes.ADVANCED_PCB.getItemStack(), Blocks.brick_block}, {null, Blocks.piston, null}});
018, "Fertilizer", ModuleFertilizer.class, 10)).addRecipe(new Object[][] {{bonemeal, null, bonemeal}, {Items.glass_bottle, Items.leather, Items.glass_bottle}, {Items.leather, ComponentTypes.SIMPLE_PCB.getItemStack(), Items.leather}});
019, "Height Controller", ModuleHeightControl.class, 20)).addRecipe(new Object[][] {{null, Items.compass, null}, {Items.paper, ComponentTypes.SIMPLE_PCB.getItemStack(), Items.paper}, {Items.paper, Items.paper, Items.paper}});
020, "Liquid Sensors", ModuleLiquidSensors.class, 27)).addRequirement(drillGroup).addRecipe(new Object[][] {{Items.redstone, null, Items.redstone}, {Items.lava_bucket, Items.diamond, Items.water_bucket}, {Items.iron_ingot, ComponentTypes.ADVANCED_PCB.getItemStack(), Items.iron_ingot}});
021, "Entity Detector: Animal", ModuleAnimal.class, 1)).addParent(advshooter).addRecipe(new Object[][] {{Items.porkchop}, {ComponentTypes.EMPTY_DISK.getItemStack()}});
022, "Entity Detector: Player", ModulePlayer.class, 7)).addParent(advshooter).addRecipe(new Object[][] {{Items.diamond}, {ComponentTypes.EMPTY_DISK.getItemStack()}});
023, "Entity Detector: Villager", ModuleVillager.class, 1)).addParent(advshooter).addRecipe(new Object[][] {{Items.emerald}, {ComponentTypes.EMPTY_DISK.getItemStack()}});
024, "Entity Detector: Monster", ModuleMonster.class, 1)).addParent(advshooter).addRecipe(new Object[][] {{Items.slime_ball}, {ComponentTypes.EMPTY_DISK.getItemStack()}});
025, "Seat", ModuleSeat.class, 3)).addSides(new ModuleData.SIDE[] {ModuleData.SIDE.CENTER, ModuleData.SIDE.TOP}).addRecipe(new Object[][] {{null, planks}, {null, planks}, {woodSingleSlab, planks}});
026, "Brake Handle", ModuleBrake.class, 12)).addSide(ModuleData.SIDE.RIGHT).addParent(seat).addRecipe(new Object[][] {{null, null, new ItemStack(Items.dye, 1, 1)}, {Items.iron_ingot, ComponentTypes.REFINED_HANDLE.getItemStack(), null}, {Items.redstone, Items.iron_ingot, null}});
027, "Advanced Control System", ModuleAdvControl.class, 38)).addSide(ModuleData.SIDE.RIGHT).addParent(seat).addRecipe(new Object[][] {{null, ComponentTypes.GRAPHICAL_INTERFACE.getItemStack(), null}, {Items.redstone, ComponentTypes.WHEEL.getItemStack(), Items.redstone}, {Items.iron_ingot, Items.iron_ingot, ComponentTypes.SPEED_HANDLE.getItemStack()}});
028, "Shooter", ModuleShooter.class, 15)).addSide(ModuleData.SIDE.TOP).addRecipe(new Object[][] {{ComponentTypes.PIPE.getItemStack(), ComponentTypes.PIPE.getItemStack(), ComponentTypes.PIPE.getItemStack()}, {ComponentTypes.PIPE.getItemStack(), ComponentTypes.SHOOTING_STATION.getItemStack(), ComponentTypes.PIPE.getItemStack()}, {ComponentTypes.PIPE.getItemStack(), ComponentTypes.PIPE.getItemStack(), ComponentTypes.PIPE.getItemStack()}});
029, "Advanced Shooter", ModuleShooterAdv.class, 50)).addSide(ModuleData.SIDE.TOP).addRequirement(detectorGroup).addRecipe(new Object[][] {{null, ComponentTypes.ENTITY_SCANNER.getItemStack(), null}, {null, ComponentTypes.SHOOTING_STATION.getItemStack(), ComponentTypes.PIPE.getItemStack()}, {Items.iron_ingot, ComponentTypes.ENTITY_ANALYZER.getItemStack(), Items.iron_ingot}});
030, "Cleaning Machine", ModuleCleaner.class, 23)).addSide(ModuleData.SIDE.CENTER).addRecipe(new Object[][] {{ComponentTypes.CLEANING_TUBE.getItemStack(), ComponentTypes.CLEANING_CORE.getItemStack(), ComponentTypes.CLEANING_TUBE.getItemStack()}, {ComponentTypes.CLEANING_TUBE.getItemStack(), null, ComponentTypes.CLEANING_TUBE.getItemStack()}, {ComponentTypes.CLEANING_TUBE.getItemStack(), null, ComponentTypes.CLEANING_TUBE.getItemStack()}});
031, "Dynamite Carrier", ModuleDynamite.class, 3)).addSide(ModuleData.SIDE.TOP).addRecipe(new Object[][] {{null, ComponentTypes.DYNAMITE.getItemStack(), null}, {ComponentTypes.DYNAMITE.getItemStack(), Items.flint_and_steel, ComponentTypes.DYNAMITE.getItemStack()}, {null, ComponentTypes.DYNAMITE.getItemStack(), null}});
032, "Divine Shield", ModuleShield.class, 60)).addRecipe(new Object[][] {{Blocks.obsidian, ComponentTypes.REFINED_HARDENER.getItemStack(), Blocks.obsidian}, {ComponentTypes.REFINED_HARDENER.getItemStack(), Blocks.diamond_block, ComponentTypes.REFINED_HARDENER.getItemStack()}, {Blocks.obsidian, ComponentTypes.REFINED_HARDENER.getItemStack(), Blocks.obsidian}});
033, "Melter", ModuleMelter.class, 10)).addRecipe(new Object[][] {{Blocks.nether_brick, Blocks.glowstone, Blocks.nether_brick}, {Items.glowstone_dust, Blocks.furnace, Items.glowstone_dust}, {Blocks.nether_brick, Blocks.glowstone, Blocks.nether_brick}});
034, "Extreme Melter", ModuleMelterExtreme.class, 19)).addRecipe(new Object[][] {{Blocks.nether_brick, Blocks.obsidian, Blocks.nether_brick}, {melter.getItemStack(), Items.lava_bucket, melter.getItemStack()}, {Blocks.nether_brick, Blocks.obsidian, Blocks.nether_brick}});
036, "Invisibility Core", ModuleInvisible.class, 21)).addRecipe(new Object[][] {{null, ComponentTypes.GLASS_O_MAGIC.getItemStack(), null}, {ComponentTypes.GLASS_O_MAGIC.getItemStack(), Items.ender_eye, ComponentTypes.GLASS_O_MAGIC.getItemStack()}, {null, Items.golden_carrot, null}});
037, "Wooden Hull", ModuleWood.class)).setCapacity(50).setEngineMax(1).setAddonMax(0).setComplexityMax(15).addRecipe(new Object[][] {{planks, null, planks}, {planks, planks, planks}, {ComponentTypes.WOODEN_WHEELS.getItemStack(), null, ComponentTypes.WOODEN_WHEELS.getItemStack()}});
038, "Standard Hull", ModuleStandard.class)).setCapacity(200).setEngineMax(3).setAddonMax(6).setComplexityMax(50).addRecipe(new Object[][] {{Items.iron_ingot, null, Items.iron_ingot}, {Items.iron_ingot, Items.iron_ingot, Items.iron_ingot}, {ComponentTypes.IRON_WHEELS.getItemStack(), null, ComponentTypes.IRON_WHEELS.getItemStack()}});
039, "Reinforced Hull", ModuleReinforced.class)).setCapacity(500).setEngineMax(5).setAddonMax(12).setComplexityMax(150).addRecipe(new Object[][] {{ComponentTypes.REINFORCED_METAL.getItemStack(), null, ComponentTypes.REINFORCED_METAL.getItemStack()}, {ComponentTypes.REINFORCED_METAL.getItemStack(), ComponentTypes.REINFORCED_METAL.getItemStack(), ComponentTypes.REINFORCED_METAL.getItemStack()}, {ComponentTypes.REINFORCED_WHEELS.getItemStack(), null, ComponentTypes.REINFORCED_WHEELS.getItemStack()}});
040, "Note Sequencer", ModuleNote.class, 30)).addSides(new ModuleData.SIDE[] {ModuleData.SIDE.RIGHT, ModuleData.SIDE.LEFT}).addRecipe(new Object[][] {{Blocks.noteblock, null, Blocks.noteblock}, {Blocks.noteblock, Blocks.jukebox, Blocks.noteblock}, {planks, Items.redstone, planks}});
041, "Colorizer", ModuleColorizer.class, 15)).addRecipe(new Object[][] {{ComponentTypes.RED_PIGMENT.getItemStack(), ComponentTypes.GREEN_PIGMENT.getItemStack(), ComponentTypes.BLUE_PIGMENT.getItemStack()}, {Items.iron_ingot, Items.redstone, Items.iron_ingot}, {null, Items.iron_ingot, null}});
042, "Iron Drill", ModuleDrillIron.class, 3, false)).addSide(ModuleData.SIDE.FRONT).addRecipe(new Object[][] {{Items.iron_ingot, Items.iron_ingot, null}, {null, Items.iron_ingot, Items.iron_ingot}, {Items.iron_ingot, Items.iron_ingot, null}});
043, "Hardened Drill", ModuleDrillHardened.class, 45, false)).addSide(ModuleData.SIDE.FRONT).addRecipe(new Object[][] {{ComponentTypes.HARDENED_MESH.getItemStack(), ComponentTypes.REINFORCED_METAL.getItemStack(), null}, {Blocks.diamond_block, drill.getItemStack(), ComponentTypes.REINFORCED_METAL.getItemStack()}, {ComponentTypes.HARDENED_MESH.getItemStack(), ComponentTypes.REINFORCED_METAL.getItemStack(), null}});
044, "Tiny Coal Engine", ModuleCoalTiny.class, 2)).addRecipe(new Object[][] {{Items.iron_ingot, Blocks.furnace, Items.iron_ingot}, {null, Blocks.piston, null}})
045, "Basic Solar Engine", ModuleSolarBasic.class, 12)).addSides(new ModuleData.SIDE[] {ModuleData.SIDE.CENTER, ModuleData.SIDE.TOP}).removeModel("Top").addRecipe(new Object[][] {{ComponentTypes.SOLAR_PANEL.getItemStack(), Items.iron_ingot, ComponentTypes.SOLAR_PANEL.getItemStack()}, {Items.iron_ingot, ComponentTypes.SIMPLE_PCB.getItemStack(), Items.iron_ingot}, {null, Blocks.piston, null}});
047, "Pumpkin chariot", ModulePumpkin.class)).setCapacity(40).setEngineMax(1).setAddonMax(0).setComplexityMax(15).addRecipe(new Object[][] {{planks, null, planks}, {planks, Blocks.pumpkin, planks}, {ComponentTypes.WOODEN_WHEELS.getItemStack(), null, ComponentTypes.WOODEN_WHEELS.getItemStack()}});
048, "Entity Detector: Bat", ModuleBat.class, 1)).addParent(advshooter).addRecipe(new Object[][] {{Blocks.pumpkin}, {ComponentTypes.EMPTY_DISK.getItemStack()}});
049, "Chunk Loader", ModuleChunkLoader.class, 84)).addRecipe(new Object[][] {{null, Items.ender_pearl, null}, {ComponentTypes.SIMPLE_PCB.getItemStack(), Items.iron_ingot, ComponentTypes.SIMPLE_PCB.getItemStack()}, {ComponentTypes.REINFORCED_METAL.getItemStack(), ComponentTypes.ADVANCED_PCB.getItemStack(), ComponentTypes.REINFORCED_METAL.getItemStack()}});
050, "Gift Storage", ModuleGiftStorage.class, 12)
051, "Projectile: Potion", ModulePotion.class, 10)).addRequirement(shooterGroup).addRecipe(new Object[][] {{Items.glass_bottle}, {ComponentTypes.EMPTY_DISK.getItemStack()}});
052, "Projectile: Fire Charge", ModuleFireball.class, 10)).lockByDefault().addRequirement(shooterGroup).addRecipe(new Object[][] {{Items.fire_charge}, {ComponentTypes.EMPTY_DISK.getItemStack()}});
053, "Projectile: Egg", ModuleEgg.class, 10)).addRequirement(shooterGroup).addRecipe(new Object[][] {{Items.egg}, {ComponentTypes.EMPTY_DISK.getItemStack()}});
054, "Projectile: Snowball", ModuleSnowball.class, 10)).addRequirement(shooterGroup).addRecipe(new Object[][] {{Items.snowball}, {ComponentTypes.EMPTY_DISK.getItemStack()}});
055, "Freezer", ModuleSnowCannon.class, 24)).addRecipe(new Object[][] {{Blocks.snow, Items.water_bucket, Blocks.snow}, {Items.water_bucket, ComponentTypes.SIMPLE_PCB.getItemStack(), Items.water_bucket}, {Blocks.snow, Items.water_bucket, Blocks.snow}});
056, "Compact Solar Engine", ModuleSolarCompact.class, 32)).addSides(new ModuleData.SIDE[] {ModuleData.SIDE.RIGHT, ModuleData.SIDE.LEFT}).addRecipe(new Object[][] {{ComponentTypes.ADVANCED_SOLAR_PANEL.getItemStack(), Items.iron_ingot, ComponentTypes.ADVANCED_SOLAR_PANEL.getItemStack()}, {ComponentTypes.ADVANCED_PCB.getItemStack(), Items.redstone, ComponentTypes.ADVANCED_PCB.getItemStack()}, {Blocks.piston, Items.iron_ingot, Blocks.piston}});
057, "Cage", ModuleCage.class, 7)).addSides(new ModuleData.SIDE[] {ModuleData.SIDE.TOP, ModuleData.SIDE.CENTER}).addRecipe(new Object[][] {{Blocks.fence, Blocks.fence, Blocks.fence}, {Blocks.fence, ComponentTypes.SIMPLE_PCB.getItemStack(), Blocks.fence}, {Blocks.fence, Blocks.fence, Blocks.fence}});
058, "Crop: Nether Wart", ModuleNetherwart.class, 20)).addRequirement(farmerGroup).addRecipe(new Object[][] {{Items.nether_wart}, {ComponentTypes.EMPTY_DISK.getItemStack()}});
059, "Firework display", ModuleFirework.class, 45)).addRecipe(new Object[][] {{Blocks.fence, Blocks.dispenser, Blocks.fence}, {Blocks.crafting_table, ComponentTypes.FUSE.getItemStack(), Blocks.crafting_table}, {ComponentTypes.SIMPLE_PCB.getItemStack(), Items.flint_and_steel, ComponentTypes.SIMPLE_PCB.getItemStack()}});
061, "Creative Engine", ModuleCheatEngine.class, 1);
062, "Mechanical Pig", ModulePig.class)).setCapacity(150).setEngineMax(2).setAddonMax(4).setComplexityMax(50).addSide(ModuleData.SIDE.FRONT).addRecipe(new Object[][] {{Items.porkchop, null, Items.porkchop}, {Items.porkchop, Items.porkchop, Items.porkchop}, {ComponentTypes.IRON_WHEELS.getItemStack(), null, ComponentTypes.IRON_WHEELS.getItemStack()}}).addMessage(Localization.MODULE_INFO.PIG_MESSAGE);
063, "Internal Tank", ModuleInternalTank.class, 37)).setAllowDuplicate().addRecipe(new Object[][] {{ComponentTypes.TANK_PANE.getItemStack(), ComponentTypes.TANK_PANE.getItemStack(), ComponentTypes.TANK_PANE.getItemStack()}, {ComponentTypes.TANK_PANE.getItemStack(), ComponentTypes.TANK_VALVE.getItemStack(), ComponentTypes.TANK_PANE.getItemStack()}, {ComponentTypes.TANK_PANE.getItemStack(), ComponentTypes.TANK_PANE.getItemStack(), ComponentTypes.TANK_PANE.getItemStack()}});
064, "Side Tanks", ModuleSideTanks.class, 10)).addSides(new ModuleData.SIDE[] {ModuleData.SIDE.RIGHT, ModuleData.SIDE.LEFT}).addRecipe(new Object[][] {{ComponentTypes.HUGE_TANK_PANE.getItemStack(), ComponentTypes.TANK_PANE.getItemStack(), ComponentTypes.HUGE_TANK_PANE.getItemStack()}, {ComponentTypes.LARGE_TANK_PANE.getItemStack(), ComponentTypes.TANK_VALVE.getItemStack(), ComponentTypes.LARGE_TANK_PANE.getItemStack()}, {ComponentTypes.HUGE_TANK_PANE.getItemStack(), ComponentTypes.TANK_PANE.getItemStack(), ComponentTypes.HUGE_TANK_PANE.getItemStack()}});
065, "Top Tank", ModuleTopTank.class, 22)).addSide(ModuleData.SIDE.TOP).addRecipe(new Object[][] {{ComponentTypes.HUGE_TANK_PANE.getItemStack(), ComponentTypes.HUGE_TANK_PANE.getItemStack(), ComponentTypes.HUGE_TANK_PANE.getItemStack()}, {ComponentTypes.TANK_PANE.getItemStack(), ComponentTypes.TANK_VALVE.getItemStack(), ComponentTypes.TANK_PANE.getItemStack()}, {ComponentTypes.HUGE_TANK_PANE.getItemStack(), ComponentTypes.HUGE_TANK_PANE.getItemStack(), ComponentTypes.HUGE_TANK_PANE.getItemStack()}});
066, "Advanced Tank", ModuleAdvancedTank.class, 54)).addSides(new ModuleData.SIDE[] {ModuleData.SIDE.TOP, ModuleData.SIDE.CENTER}).addRecipe(new Object[][] {{ComponentTypes.HUGE_TANK_PANE.getItemStack(), ComponentTypes.HUGE_TANK_PANE.getItemStack(), ComponentTypes.HUGE_TANK_PANE.getItemStack()}, {ComponentTypes.HUGE_TANK_PANE.getItemStack(), ComponentTypes.TANK_VALVE.getItemStack(), ComponentTypes.HUGE_TANK_PANE.getItemStack()}, {ComponentTypes.HUGE_TANK_PANE.getItemStack(), ComponentTypes.HUGE_TANK_PANE.getItemStack(), ComponentTypes.HUGE_TANK_PANE.getItemStack()}});
067, "Front Tank", ModuleFrontTank.class, 15)).addSide(ModuleData.SIDE.FRONT).addRecipe(new Object[][] {{ComponentTypes.TANK_PANE.getItemStack(), ComponentTypes.LARGE_TANK_PANE.getItemStack(), ComponentTypes.TANK_PANE.getItemStack()}, {ComponentTypes.TANK_PANE.getItemStack(), ComponentTypes.TANK_VALVE.getItemStack(), ComponentTypes.TANK_PANE.getItemStack()}, {ComponentTypes.LARGE_TANK_PANE.getItemStack(), ComponentTypes.LARGE_TANK_PANE.getItemStack(), ComponentTypes.LARGE_TANK_PANE.getItemStack()}});
068, "Incinerator", ModuleIncinerator.class, 23)).addRequirement(tankGroup).addRequirement(drillGroup).addRecipe(new Object[][] {{Blocks.nether_brick, Blocks.nether_brick, Blocks.nether_brick}, {Blocks.obsidian, Blocks.furnace, Blocks.obsidian}, {Blocks.nether_brick, Blocks.nether_brick, Blocks.nether_brick}});
069, "Thermal Engine", ModuleThermalStandard.class, 28)).addRequirement(tankGroup).addRecipe(new Object[][] {{Blocks.nether_brick, Blocks.nether_brick, Blocks.nether_brick}, {Blocks.obsidian, Blocks.furnace, Blocks.obsidian}, {Blocks.piston, null, Blocks.piston}});
070, "Advanced Thermal Engine", ModuleThermalAdvanced.class, 58)).addRequirement(tankGroup.copy(2)).addRecipe(new Object[][] {{Blocks.nether_brick, Blocks.nether_brick, Blocks.nether_brick}, {ComponentTypes.REINFORCED_METAL.getItemStack(), thermal0.getItemStack(), ComponentTypes.REINFORCED_METAL.getItemStack()}, {Blocks.piston, null, Blocks.piston}});
071, "Liquid Cleaner", ModuleLiquidDrainer.class, 30)).addSide(ModuleData.SIDE.CENTER).addParent(liquidsensors).addRequirement(tankGroup).addRecipe(new Object[][] {{ComponentTypes.LIQUID_CLEANING_TUBE.getItemStack(), ComponentTypes.LIQUID_CLEANING_CORE.getItemStack(), ComponentTypes.LIQUID_CLEANING_TUBE.getItemStack()}, {ComponentTypes.LIQUID_CLEANING_TUBE.getItemStack(), null, ComponentTypes.LIQUID_CLEANING_TUBE.getItemStack()}, {ComponentTypes.LIQUID_CLEANING_TUBE.getItemStack(), null, ComponentTypes.LIQUID_CLEANING_TUBE.getItemStack()}});
072, "Creative Tank", ModuleCheatTank.class, 1)).setAllowDuplicate().addMessage(Localization.MODULE_INFO.OCEAN_MESSAGE);
073, "Open Tank", ModuleOpenTank.class, 31)).addSide(ModuleData.SIDE.TOP).addRecipe(new Object[][] {{ComponentTypes.TANK_PANE.getItemStack(), null, ComponentTypes.TANK_PANE.getItemStack()}, {ComponentTypes.TANK_PANE.getItemStack(), ComponentTypes.TANK_VALVE.getItemStack(), ComponentTypes.TANK_PANE.getItemStack()}, {ComponentTypes.HUGE_TANK_PANE.getItemStack(), ComponentTypes.HUGE_TANK_PANE.getItemStack(), ComponentTypes.HUGE_TANK_PANE.getItemStack()}});
074, "Egg Basket", ModuleEggBasket.class, 14)
075, "Drill Intelligence", ModuleDrillIntelligence.class, 21)).addRequirement(drillGroup).addRecipe(new Object[][] {{Items.gold_ingot, Items.gold_ingot, Items.gold_ingot}, {Items.iron_ingot, ComponentTypes.ADVANCED_PCB.getItemStack(), Items.iron_ingot}, {ComponentTypes.ADVANCED_PCB.getItemStack(), Items.redstone, ComponentTypes.ADVANCED_PCB.getItemStack()}});
076, "Creative Hull", ModuleCheatHull.class)).setCapacity(10000).setEngineMax(5).setAddonMax(12).setComplexityMax(150);
077, "Power Observer", ModulePowerObserver.class, 12)).addRequirement(engineGroup).addRecipe(new Object[][] {{null, Blocks.piston, null}, {Items.iron_ingot, Items.redstone, Items.iron_ingot}, {Items.redstone, ComponentTypes.ADVANCED_PCB.getItemStack(), Items.redstone}});
078, "Steve\'s Arcade", ModuleArcade.class, 10)).addParent(seat).addRecipe(new Object[][] {{null, Blocks.glass_pane, null}, {planks, ComponentTypes.SIMPLE_PCB.getItemStack(), planks}, {Items.redstone, planks, Items.redstone}});
079, "Hardened Wood Cutter", ModuleWoodcutterHardened.class, 65, false)).addSide(ModuleData.SIDE.FRONT).addRecipe(new Object[][] {{ComponentTypes.HARDENED_SAW_BLADE.getItemStack(), ComponentTypes.HARDENED_SAW_BLADE.getItemStack(), ComponentTypes.HARDENED_SAW_BLADE.getItemStack()}, {ComponentTypes.HARDENED_SAW_BLADE.getItemStack(), Items.diamond, ComponentTypes.HARDENED_SAW_BLADE.getItemStack()}, {null, ComponentTypes.WOOD_CUTTING_CORE.getItemStack(), null}}).addRecipe(new Object[][] {{ComponentTypes.REINFORCED_METAL.getItemStack(), ComponentTypes.REINFORCED_METAL.getItemStack(), ComponentTypes.REINFORCED_METAL.getItemStack()}, {ComponentTypes.REINFORCED_METAL.getItemStack(), Items.iron_ingot, ComponentTypes.REINFORCED_METAL.getItemStack()}, {null, woodcutter.getItemStack(), null}});
080, "Galgadorian Wood Cutter", ModuleWoodcutterGalgadorian.class, 120, true)).addSide(ModuleData.SIDE.FRONT).addRecipe(new Object[][] {{ComponentTypes.GALGADORIAN_SAW_BLADE.getItemStack(), ComponentTypes.GALGADORIAN_SAW_BLADE.getItemStack(), ComponentTypes.GALGADORIAN_SAW_BLADE.getItemStack()}, {ComponentTypes.GALGADORIAN_SAW_BLADE.getItemStack(), ComponentTypes.REINFORCED_METAL.getItemStack(), ComponentTypes.GALGADORIAN_SAW_BLADE.getItemStack()}, {null, ComponentTypes.WOOD_CUTTING_CORE.getItemStack(), null}}).addRecipe(new Object[][] {{ComponentTypes.GALGADORIAN_METAL.getItemStack(), ComponentTypes.GALGADORIAN_METAL.getItemStack(), ComponentTypes.GALGADORIAN_METAL.getItemStack()}, {ComponentTypes.GALGADORIAN_METAL.getItemStack(), Items.iron_ingot, ComponentTypes.GALGADORIAN_METAL.getItemStack()}, {null, woodcutterHardened.getItemStack(), null}});
081, "Galgadorian Hull", ModuleGalgadorian.class)).setCapacity(1000).setEngineMax(5).setAddonMax(12).setComplexityMax(150).addRecipe(new Object[][] {{ComponentTypes.GALGADORIAN_METAL.getItemStack(), null, ComponentTypes.GALGADORIAN_METAL.getItemStack()}, {ComponentTypes.GALGADORIAN_METAL.getItemStack(), ComponentTypes.GALGADORIAN_METAL.getItemStack(), ComponentTypes.GALGADORIAN_METAL.getItemStack()}, {ComponentTypes.GALGADORIAN_WHEELS.getItemStack(), null, ComponentTypes.GALGADORIAN_WHEELS.getItemStack()}});
082, "Enchanter", ModuleEnchants.class, 72)).addRequirement(enchantableGroup).addRecipe(new Object[][] {{null, ComponentTypes.GALGADORIAN_METAL.getItemStack(), null}, {Items.book, Blocks.enchanting_table, Items.book}, {Items.redstone, ComponentTypes.ADVANCED_PCB.getItemStack(), Items.redstone}});
083, "Ore Extractor", ModuleOreTracker.class, 80)).addRequirement(drillGroup).addRecipe(new Object[][] {{Blocks.redstone_torch, null, Blocks.redstone_torch}, {ComponentTypes.EYE_OF_GALGADOR.getItemStack(), ComponentTypes.GALGADORIAN_METAL.getItemStack(), ComponentTypes.EYE_OF_GALGADOR.getItemStack()}, {Items.quartz, ComponentTypes.ADVANCED_PCB.getItemStack(), Items.quartz}});
084, "Galgadorian Farmer", ModuleFarmerGalgadorian.class, 55, true)).addSide(ModuleData.SIDE.FRONT).addRecipe(new Object[][] {{ComponentTypes.GALGADORIAN_METAL.getItemStack(), ComponentTypes.GALGADORIAN_METAL.getItemStack(), ComponentTypes.GALGADORIAN_METAL.getItemStack()}, {null, ComponentTypes.REINFORCED_METAL.getItemStack(), null}, {ComponentTypes.ADVANCED_PCB.getItemStack(), Items.gold_ingot, ComponentTypes.ADVANCED_PCB.getItemStack()}}).addRecipe(new Object[][] {{ComponentTypes.GALGADORIAN_METAL.getItemStack(), ComponentTypes.GALGADORIAN_METAL.getItemStack(), ComponentTypes.GALGADORIAN_METAL.getItemStack()}, {null, farmerbasic.getItemStack(), null}, {null, ComponentTypes.SIMPLE_PCB.getItemStack(), null}});
085, "Lawn Mower", ModuleFlowerRemover.class, 38)).addSides(new ModuleData.SIDE[] {ModuleData.SIDE.RIGHT, ModuleData.SIDE.LEFT}).addRecipe(new Object[][] {{ComponentTypes.BLADE_ARM.getItemStack(), null, ComponentTypes.BLADE_ARM.getItemStack()}, {null, ComponentTypes.SIMPLE_PCB.getItemStack(), null}, {ComponentTypes.BLADE_ARM.getItemStack(), null, ComponentTypes.BLADE_ARM.getItemStack()}});
086, "Milker", ModuleMilker.class, 26)).addParent(cage).addRecipe(new Object[][] {{Items.wheat, Items.wheat, Items.wheat}, {ComponentTypes.SIMPLE_PCB.getItemStack(), Items.bucket, ComponentTypes.SIMPLE_PCB.getItemStack()}, {null, ComponentTypes.SIMPLE_PCB.getItemStack(), null}});
087, "Crafter", ModuleCrafter.class, 22)).setAllowDuplicate().addRecipe(new Object[][] {{ComponentTypes.SIMPLE_PCB.getItemStack()}, {Blocks.crafting_table}});
088, "Tree: Exotic", ModuleModTrees.class, 30)).addRequirement(woodcutterGroup).addRecipe(new Object[][] {{Items.glowstone_dust, null, Items.glowstone_dust}, {Items.redstone, Blocks.sapling, Items.redstone}, {ComponentTypes.SIMPLE_PCB.getItemStack(), ComponentTypes.EMPTY_DISK.getItemStack(), ComponentTypes.SIMPLE_PCB.getItemStack()}});
089, "Planter Range Extender", ModulePlantSize.class, 20)).addRequirement(woodcutterGroup).addRecipe(new Object[][] {{Items.redstone, ComponentTypes.ADVANCED_PCB.getItemStack(), Items.redstone}, {null, Blocks.sapling, null}, {ComponentTypes.SIMPLE_PCB.getItemStack(), Blocks.sapling, ComponentTypes.SIMPLE_PCB.getItemStack()}});
090, "Projectile: Cake", ModuleCake.class, 10)).addRequirement(shooterGroup).lock().addRecipe(new Object[][] {{Items.cake}, {ComponentTypes.EMPTY_DISK.getItemStack()}});
091, "Smelter", ModuleSmelter.class, 22)).setAllowDuplicate().addRecipe(new Object[][] {{ComponentTypes.SIMPLE_PCB.getItemStack()}, {Blocks.furnace}});
092, "Advanced Crafter", ModuleCrafterAdv.class, 42)).setAllowDuplicate().addRecipe(new Object[][] {{null, Items.diamond, null}, {null, ComponentTypes.ADVANCED_PCB.getItemStack(), null}, {ComponentTypes.SIMPLE_PCB.getItemStack(), crafter.getItemStack(), ComponentTypes.SIMPLE_PCB.getItemStack()}});
093, "Advanced Smelter", ModuleSmelterAdv.class, 42)).setAllowDuplicate().addRecipe(new Object[][] {{null, Items.diamond, null}, {null, ComponentTypes.ADVANCED_PCB.getItemStack(), null}, {ComponentTypes.SIMPLE_PCB.getItemStack(), smelter.getItemStack(), ComponentTypes.SIMPLE_PCB.getItemStack()}});
094, "Information Provider", ModuleLabel.class, 12)).addRecipe(new Object[][] {{Blocks.glass_pane, Blocks.glass_pane, Blocks.glass_pane}, {Items.iron_ingot, Items.glowstone_dust, Items.iron_ingot}, {ComponentTypes.SIMPLE_PCB.getItemStack(), Items.sign, ComponentTypes.SIMPLE_PCB.getItemStack()}});
095, "Experience Bank", ModuleExperience.class, 36)).addRecipe(new Object[][] {{null, Items.redstone, null}, {Items.glowstone_dust, Items.emerald, Items.glowstone_dust}, {ComponentTypes.SIMPLE_PCB.getItemStack(), Blocks.cauldron, ComponentTypes.SIMPLE_PCB.getItemStack()}});
096, "Creative Incinerator", ModuleCreativeIncinerator.class, 1)).addRequirement(drillGroup);
097, "Creative Supplies", ModuleCreativeSupplies.class, 1);
099, "Cake Server", ModuleCakeServer.class, 10)).addSide(ModuleData.SIDE.TOP).addMessage(Localization.MODULE_INFO.ALPHA_MESSAGE).addRecipe(new Object[][] {{null, Items.cake, null}, {"slabWood", "slabWood", "slabWood"}, {null, ComponentTypes.SIMPLE_PCB.getItemStack(), null}});
100, "Trick-or-Treat Cake Server", ModuleCakeServerDynamite.class, 15)).addSide(ModuleData.SIDE.TOP).addRecipe(new Object[][] {{null, Items.cake, null}, {"slabWood", "slabWood", "slabWood"}, {ComponentTypes.DYNAMITE.getItemStack(), ComponentTypes.SIMPLE_PCB.getItemStack(), ComponentTypes.DYNAMITE.getItemStack()}});
101, "Color Randomizer", ModuleColorRandomizer.class, 20)).addRecipe(new Object[][] {{colorizer.getItemStack()}, {ComponentTypes.SIMPLE_PCB.getItemStack()}});